---  clean tables and procedures
--create:

use [GD2C2013]
GO

CREATE SCHEMA CLINICA
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


--drop schema CLINICA

/*************************************************************************************
*                    TABLES                                                          *
**************************************************************************************/

create table [CLINICA].[AFILIADO]
(
	numero [int] identity(1,1) not null,
	apellido [varchar] (255) not null,
	nombre [varchar] (255) not null,
	dni [int] not null,
	direccion [varchar] (255) not null,
	cod_estado_civil [int],
	fecha_nac [datetime],
	telefono [int] not null,
	mail [varchar] (255) not null,
	cantidad_hijos [int],
	fecha_baja [datetime],
	cod_plan [int] not null,
	enable [varchar] (1)
	--tipo_afiliado [int] not null
)


create table [CLINICA].[ESTADO_CIVIL]
(
	codigo [int]identity(1,1) not null,
	descripcion [varchar] (255) not null
)


create table [CLINICA].[CAMBIO_PLAN]
(
	fecha_modificaion [datetime] not null,
	motivo [varchar] (255) not null,
	nro_afiliado [int] not null
)


create table [CLINICA].[PLAN]
(
	codigo [int] not null,
	descripcion [varchar] (255) not null,
	precio_bono_consulta  [int] not null,
	precio_bono_farmacia [int] not null
)


create table [CLINICA].[BONO_CONSULTA]
(
	fecha_compra [datetime],
	numero [int],
	--numero_consulta [int],
	fecha_impresion [datetime],
	nro_afiliado [int]
)


create table [CLINICA].[BONO_FARMACIA]
(
	fecha_compra [datetime],
	numero [int],
	fecha_impresion [datetime],
	fecha_vencimiento [datetime],
	nro_afiliado [int]
)


create table [CLINICA].[MEDICAMENTO]
(
	descripcion [varchar] (255) not null,
	nro_bono_farmacia [int] not null
)



create table [CLINICA].[PROFESIONAL]
(
	numero [int] identity(1,1) not null,
	apellido [varchar] (255) not null,
	nombre [varchar] (255) not null,
	dni [int] not null,
	direccion [varchar] (255) not null,
	fecha_nac [datetime],
	telefono [int] not null,
	enable [varchar] (1),
	mail [varchar] (255) not null
)

create table [CLINICA].[AGENDA]
(
	numero [int] identity(1,1) not null,
	fecha_fin [date] not null,
	fecha_inicio [date] not null,
	nro_profesional [int] not null
)

create table [CLINICA].[DIA_ATENCION]
(
	codigo_dia [int] not null,
	hora_fin [time] not null,
	hora_inicio [time] not null,
	nro_agenda [int] not null
)


create table [CLINICA].[DIA]
(
	codigo [int] identity(1,1) not null,
	descripcion [varchar] (255) not null
)


create table [CLINICA].[PROFESIONAL_ESPECIALIDAD]
(
	nro_profesional [int] not null,
	cod_especialidad [int] not null
)


create table [CLINICA].[ESPECIALIDAD]
(
	codigo [int] not null,
	descripcion [varchar] (255) not null,
	cod_tipo_especialidad [int] not null
)


create table [CLINICA].[TIPO_ESPECIALIDAD]
(
	codigo [int] not null,
	descripcion [varchar] (255) not null
)


create table [CLINICA].[TURNO]
(
	numero [int] not null,
	fecha [datetime] not null,
	fecha_llegada [datetime],
	dni_afiliado [int] not null,
	dni_profesional [int] not null,
	nro_day [int] not null
)


create table [CLINICA].[CANCELACION_TURNO]
(
	motivo [varchar] (255) not null,
	nro_turno [int] not null,
	--tipo_cancelacion [int] not null
)



create table [CLINICA].[CONSULTA]
(
	diagnostico [varchar] (255) not null,
	sintomas [varchar] (255) not null,
	fecha_atencion [datetime],
	nro_bono_consulta [int] not null,
	nro_turno [int] not null
)


create table [CLINICA].[CONSULTA_BONO_FARMACIA]
(
	nro_bono_farmacia [int] not null,
	nro_turno [int] not null,
	nro_bono_consulta [int] not null
)



/*************************************************************************************
*                    CONSTRAINT                                                          *
**************************************************************************************/

--ALTER TABLE [CLINICA].[AFILIADO] ADD CONSTRAINT pk_nro_afiliado PRIMARY KEY(nro_afiliado);
--ALTER TABLE [CLINICA].[PLAN] ADD CONSTRAINT pk_codigo PRIMARY KEY(codigo);

/*************************************************************************************
*                    MIGRATION                                                          *
**************************************************************************************/


/******************************************************
*                    ESTADO CIVIL                     *
*******************************************************/

INSERT INTO 
	[CLINICA].[ESTADO_CIVIL] (descripcion)
VALUES 
	('single')

INSERT INTO 
	[CLINICA].[ESTADO_CIVIL] (descripcion)
VALUES 
	('married')

INSERT INTO 
	[CLINICA].[ESTADO_CIVIL] (descripcion)
VALUES 
	('widower')

INSERT INTO 
	[CLINICA].[ESTADO_CIVIL] (descripcion)
VALUES 
	('concubinage')

INSERT INTO 
	[CLINICA].[ESTADO_CIVIL] (descripcion)
VALUES 
	('divorced')


/******************************************************
*                    DIA                              *
*******************************************************/
INSERT INTO 
	[CLINICA].[DIA] (descripcion)
VALUES 
	('sunday')
	
INSERT INTO 
	[CLINICA].[DIA] (descripcion)
VALUES 
	('monday')

INSERT INTO 
	[CLINICA].[DIA] (descripcion)
VALUES 
	('tuesday')

INSERT INTO 
	[CLINICA].[DIA] (descripcion)
VALUES 
	('wednesday')

INSERT INTO 
	[CLINICA].[DIA] (descripcion)
VALUES 
	('thursday')

INSERT INTO 
	[CLINICA].[DIA] (descripcion)
VALUES 
	('friday')

INSERT INTO 
	[CLINICA].[DIA] (descripcion)
VALUES 
	('saturday')


/******************************************************
*                    AFILIADO                         *
*******************************************************/

INSERT INTO 
	[CLINICA].[AFILIADO](apellido, nombre, dni, direccion, fecha_nac, telefono, mail,  cod_plan)
SELECT DISTINCT 
	Paciente_Apellido, Paciente_Nombre, Paciente_Dni, Paciente_Direccion, Paciente_Fecha_Nac, Paciente_Telefono, Paciente_Mail, Plan_Med_Codigo
FROM 
	gd_esquema.Maestra


/******************************************************
*                    BONOS                            *
*******************************************************/

-- turno -> compra bono consulta ó compra bono farmacia -> medicamento

-- bonos consulta

INSERT INTO 
	[CLINICA].[BONO_CONSULTA](fecha_compra, numero, fecha_impresion, nro_afiliado)
SELECT DISTINCT 
	 M.Compra_Bono_Fecha, M.Bono_Consulta_Numero, M.Bono_Consulta_Fecha_Impresion, A.numero
FROM 
	gd_esquema.Maestra M
--order by M.Bono_Consulta_Numero
INNER JOIN
	[CLINICA].[AFILIADO] A	
ON
	M.Paciente_Dni=A.dni
WHERE 
	M.Compra_Bono_Fecha IS NOT NULL AND
	M.Bono_Consulta_Fecha_Impresion IS NOT NULL 
--Order by 
--	A.nro_afiliado
	
	
-- bonos farmacia 
INSERT INTO 
	[CLINICA].[BONO_FARMACIA](fecha_compra, numero, fecha_impresion, nro_afiliado)
SELECT DISTINCT 
	 M.Compra_Bono_Fecha, M.Bono_Farmacia_Numero, M.Bono_Farmacia_Fecha_Impresion, A.numero
FROM 
	gd_esquema.Maestra M
INNER JOIN
	[CLINICA].[AFILIADO] A	
ON
	M.Paciente_Dni=A.dni
WHERE 
	M.Compra_Bono_Fecha IS NOT NULL AND
	M.Bono_Farmacia_Fecha_Impresion IS NOT NULL
--Order by 
--	A.nro_afiliado
	
/******************************************************
*                    CONSULTA                         *
*******************************************************/
INSERT INTO 
	[CLINICA].[CONSULTA](nro_bono_consulta, diagnostico, sintomas, nro_turno)
SELECT DISTINCT 
	 M.Bono_Consulta_Numero, M.Consulta_Enfermedades, M.Consulta_Sintomas, M.Turno_Numero 
FROM 
	gd_esquema.Maestra M
where
	M.Bono_Consulta_Numero is not null and 
	M.Consulta_Enfermedades is not null and 
	M.Consulta_Sintomas is not null
--order by M.Bono_Consulta_Numero

/******************************************************
*                    CONSULTA_BONO_FARMACIA           *
*******************************************************/
INSERT INTO 
	[CLINICA].[CONSULTA_BONO_FARMACIA](nro_bono_consulta, nro_bono_farmacia, nro_turno)
SELECT DISTINCT 
	 M.Bono_Consulta_Numero, M.Bono_Farmacia_Numero, M.Turno_Numero 
FROM 
	gd_esquema.Maestra M
where
	M.Bono_Consulta_Numero is not null and 
	M.Consulta_Enfermedades is not null and 
	M.Consulta_Sintomas is not null
--order by M.Bono_Consulta_Numero


/******************************************************
*                    MEDICAMENTOS                     *
*******************************************************/
INSERT INTO 
	[CLINICA].[MEDICAMENTO](descripcion, nro_bono_farmacia)

SELECT DISTINCT 
	 M.Bono_Farmacia_Medicamento, M.Bono_Farmacia_Numero
FROM 
	gd_esquema.Maestra M
INNER JOIN
	[CLINICA].[AFILIADO] A	
ON
	M.Paciente_Dni=A.dni
WHERE 
	M.Bono_Farmacia_Medicamento IS NOT NULL 


/******************************************************
*                    PLAN                             *
*******************************************************/

INSERT INTO 
	[CLINICA].[PLAN](codigo, descripcion, precio_bono_consulta, precio_bono_farmacia)
SELECT DISTINCT  
	Plan_Med_Codigo, Plan_Med_Descripcion, Plan_Med_Precio_Bono_Consulta, Plan_Med_Precio_Bono_Farmacia 
FROM 
	gd_esquema.Maestra

/******************************************************
*                    PROFESIONAL                      *
*******************************************************/

INSERT INTO 
	[CLINICA].[PROFESIONAL](apellido, nombre, dni, direccion, fecha_nac, telefono, mail)
SELECT DISTINCT 
	Medico_Apellido, Medico_Nombre, Medico_Dni, Medico_Direccion, Medico_Fecha_Nac, Medico_Telefono, Medico_Mail 
FROM 
	gd_esquema.Maestra
WHERE 
	Medico_Apellido IS NOT NULL AND
	Medico_Nombre IS NOT NULL AND
	Medico_Dni IS NOT NULL AND
	Medico_Direccion IS NOT NULL AND
	Medico_Fecha_Nac IS NOT NULL AND
	Medico_Telefono IS NOT NULL AND
	Medico_Mail IS NOT NULL


/******************************************************
*                    TIPO_ESPECIALIDAD_MEDICA         *
*******************************************************/

INSERT INTO 
	[CLINICA].[TIPO_ESPECIALIDAD](codigo, descripcion)
SELECT DISTINCT 
	M.Tipo_Especialidad_Codigo, M.Tipo_Especialidad_Descripcion
FROM 
	gd_esquema.Maestra M
WHERE
	Tipo_Especialidad_Codigo IS NOT NULL AND
	Tipo_Especialidad_Descripcion IS NOT NULL


/******************************************************
*                    ESPECIALIDAD_MEDICA              *
*******************************************************/

INSERT INTO 
	[CLINICA].[ESPECIALIDAD](codigo, descripcion, cod_tipo_especialidad)
SELECT DISTINCT 
	Especialidad_Codigo, Especialidad_Descripcion, Tipo_Especialidad_Codigo
FROM 
	gd_esquema.Maestra
WHERE
	Especialidad_Codigo IS NOT NULL AND
	Especialidad_Descripcion IS NOT NULL AND
	Tipo_Especialidad_Codigo IS NOT NULL

	
/******************************************************
*                    TURNO                            *
*******************************************************/

INSERT INTO 
	[CLINICA].[TURNO](numero, fecha, dni_profesional, dni_afiliado, nro_day)
SELECT DISTINCT   
	Turno_Numero, Turno_Fecha, Medico_Dni, Paciente_Dni, datepart(dw,Turno_Fecha)
FROM 
	gd_esquema.Maestra
WHERE
	Turno_Numero IS NOT NULL AND
	Turno_Fecha IS NOT NULL AND
	Medico_Dni IS NOT NULL AND
	Paciente_Dni IS NOT NULL

GO

/******************************************************
*                    AGENDA MEDICA                    *
*******************************************************/

-- AGENDA MAX DATE MIN DATE BY PROFESIONAL

INSERT INTO
	[CLINICA].[AGENDA] (nro_profesional, fecha_fin, fecha_inicio )
SELECT 
	P.numero, MAX(CONVERT(date,M.Turno_Fecha) ) as fecha_max, DATEADD(DAY, -120,MAX(CONVERT(date,M.Turno_Fecha))) as fecha_min
FROM 
	GD2C2013.gd_esquema.Maestra M
JOIN
	GD2C2013.CLINICA.PROFESIONAL P
ON
	M.Medico_Dni = P.dni
GROUP BY P.numero


-- DAY IN AGENDA MAX TIME MIN TIME BY PROFESIONAL

INSERT INTO
	[CLINICA].[DIA_ATENCION] (codigo_dia, nro_agenda, hora_fin, hora_inicio)
select 
	D.codigo as dia, A.numero as nro_agenda, MAX(CONVERT(time,M.Turno_Fecha) ) as hora_max, MIN(CONVERT(time,M.Turno_Fecha) ) as hora_min
FROM 
	GD2C2013.gd_esquema.Maestra M
INNER JOIN
	GD2C2013.CLINICA.PROFESIONAL P
ON 
	P.dni = M.Medico_Dni
INNER JOIN
	GD2C2013.CLINICA.AGENDA A
ON
	A.nro_profesional = P.numero
INNER JOIN
	GD2C2013.CLINICA.DIA D
ON
	datepart(dw,M.Turno_Fecha) = D.codigo
	
WHERE
	M.Turno_Fecha >= A.fecha_inicio AND
	datepart(dw,M.Turno_Fecha) != 1 -- SUNDAY
	
GROUP BY
	A.numero, D.codigo
--ORDER BY D.codigo, A.numero
	
GO	

-- MONDAY = 2
/*
select 
	2, A.numero, MAX(CONVERT(time,M.Turno_Fecha) ) as hora_max, MIN(CONVERT(time,M.Turno_Fecha) ) as hora_min
FROM 
	GD2C2013.gd_esquema.Maestra M
INNER JOIN
	GD2C2013.CLINICA.PROFESIONAL P
ON 
	P.dni = M.Medico_Dni
INNER JOIN
	GD2C2013.CLINICA.AGENDA A
ON
	A.nro_profesional = P.numero
WHERE
	M.Turno_Fecha >= A.fecha_inicio AND
	datepart(dw,M.Turno_Fecha) = 2
GROUP BY
	A.numero
*/





/******************************************************
*                    STORE PROCEDURES                 *
*******************************************************/

/******************************************************
*                    ADD AFILIADO                     *
*******************************************************/

CREATE PROCEDURE 
	[CLINICA].SP_ADD_AFILIADO (@apellido varchar(255), @nombre varchar(255), 
	@dni int, @direccion varchar(255), @telefono int, @mail varchar(255),
	@cod_plan int)
AS
BEGIN 
	INSERT INTO 
		[CLINICA].[AFILIADO](apellido, nombre, dni, direccion, telefono, mail,  cod_plan)
	VALUES 
		(@nombre, @apellido, @dni, @direccion, @telefono, @mail, @cod_plan)
END
GO

/******************************************************
*                    ADD PROFESIONAL                  *
*******************************************************/

CREATE PROCEDURE 
	[CLINICA].SP_ADD_PROFESIONAL (@apellido varchar(255), @nombre varchar(255), 
	@dni int, @direccion varchar(255), @telefono int, @mail varchar(255),
	@cod_plan int)
AS
BEGIN 
	INSERT INTO 
		[CLINICA].[PROFESIONAL](apellido, nombre, dni, direccion, telefono, mail)
	VALUES 
		(@nombre, @apellido, @dni, @direccion, @telefono, @mail)
END
GO

/******************************************************
*                    ADD ESPECIALIDAD TO PROFESIONAL  *
*******************************************************/

CREATE PROCEDURE 
	[CLINICA].SP_ADD_ESPECIALIDAD (@nro_profesional int, @cod_especialidad int)
AS
BEGIN 
	INSERT INTO 
		[CLINICA].[PROFESIONAL_ESPECIALIDAD](nro_profesional, cod_especialidad)
	VALUES 
		(@nro_profesional, @cod_especialidad)
END
GO

/******************************************************
*                    AGENDA PROFESIONAL               *
*******************************************************/
/*
CREATE PROCEDURE 
	[CLINICA].SP_ADD_DIA_ATENCION (@codigo_dia int, @nro_profesional int) AS
BEGIN 
	INSERT INTO 
		[CLINICA].[DIA_ATENCION](codigo_dia, nro_profesional)
	VALUES 
		(@codigo_dia, @nro_profesional)
END
GO
*/

/******************************************************
*                    BONOS                            *
*******************************************************/
CREATE PROCEDURE 
	[CLINICA].SP_ADD_BONO_CONSULTA AS
BEGIN 
	DECLARE @max_nro int = ( 
		SELECT 
			MAX(B.numero)
		FROM
			[CLINICA].[BONO_CONSULTA] B
		WHERE
			B.nro_afiliado IS NULL
	)
	IF (@max_nro is null)
	begin
		set @max_nro = 0
	end
	INSERT INTO 
		[CLINICA].[BONO_CONSULTA](numero ,fecha_impresion)
	VALUES 
		(@max_nro + 1, GETDATE())
END
GO

CREATE PROCEDURE 
	[CLINICA].SP_ADD_BONO_FARMACIA AS
BEGIN
	DECLARE @max_nro int = ( 
		SELECT 
			MAX(B.numero)
		FROM
			[CLINICA].[BONO_FARMACIA] B
		WHERE
			B.nro_afiliado IS NULL
	)
	IF (@max_nro is null)
	begin
		set @max_nro = 0
	end 
	INSERT INTO 
		[CLINICA].[BONO_FARMACIA](numero,fecha_impresion)
	VALUES 
		(@max_nro + 1, GETDATE())
END
GO

CREATE PROCEDURE 
	[CLINICA].SP_BUY_BONO_CONSULTA (@nro_afiliado int) AS
BEGIN
	DECLARE @nro int = ( 
		SELECT TOP 1
			B.numero
		FROM
			[CLINICA].[BONO_CONSULTA] B
		WHERE
			B.nro_afiliado IS NULL
	)
	IF (@nro IS NOT NULL)
	BEGIN
		UPDATE [CLINICA].[BONO_CONSULTA]
		SET 
			nro_afiliado = @nro_afiliado, 
			fecha_compra = GETDATE()
		WHERE
			numero = @nro
	END
END
GO

CREATE PROCEDURE 
	[CLINICA].SP_BUY_BONO_FARMACIA (@nro_afiliado int)
AS
BEGIN 
	DECLARE @nro int = ( 
		SELECT TOP 1
			B.numero
		FROM
			[CLINICA].[BONO_FARMACIA] B
		WHERE
			B.nro_afiliado IS NULL
	)
	IF (@nro IS NOT NULL)
	BEGIN
		UPDATE [CLINICA].[BONO_FARMACIA]
		SET 
			nro_afiliado = @nro_afiliado, 
			fecha_compra = GETDATE()
		WHERE
			numero = @nro
	END
END
GO

/******************************************************
*                    ATENCION MEDICA                  *
*******************************************************/
/*
CREATE PROCEDURE 
	[CLINICA].SP_LLEGADA_ATENCION_MEDICA (@nro_afiliado int, @nro_profesional int)
AS
BEGIN 
	DECLARE @nro int = ( 
		SELECT TOP 1
			B.numero
		FROM
			[CLINICA].[BONO_FARMACIA] B
		WHERE
			B.nro_afiliado IS NULL
	)
	IF (@nro IS NOT NULL)
	BEGIN
		UPDATE [CLINICA].[BONO_FARMACIA]
		SET 
			nro_afiliado = @nro_afiliado, 
			fecha_compra = GETDATE()
		WHERE
			numero = @nro
	END
END
*/